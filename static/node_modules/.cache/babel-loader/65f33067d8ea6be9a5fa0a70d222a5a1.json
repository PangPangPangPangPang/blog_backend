{"ast":null,"code":"import _classCallCheck from \"/home/max/blog_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/max/blog_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/max/blog_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/max/blog_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/max/blog_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/max/blog_frontend/src/compontent/comment.js\";\n\n/**\n * Created by Max on 2019-03-25.\n */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport './comment.css';\nimport PropTypes from 'prop-types';\nimport { getbaseUrl } from '../action/request';\nimport Reply from './reply';\nimport './reply.css';\nimport { getStore } from '../App';\nimport { replyComment } from '../action/reply';\nimport { isPC, getLocalTime } from '../utils/utils';\nimport defaultIcon from '../resource/png/default.png';\n\nvar Comment =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Comment, _React$Component);\n\n  function Comment(props) {\n    var _this;\n\n    _classCallCheck(this, Comment);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Comment).call(this, props));\n\n    _this.clickIconUrl = function () {\n      var blog = _this.props.blog;\n\n      if (blog === null || blog.length === 0) {\n        return;\n      }\n\n      var des = blog;\n\n      if (!blog.startsWith('http')) {\n        des = \"http://\".concat(des);\n      }\n\n      window.location.href = des;\n    };\n\n    _this.onClickReply = function () {\n      var dispatch = _this.state.dispatch;\n      var commentId = _this.props.commentId;\n      dispatch(replyComment(commentId));\n    };\n\n    _this.onClickConfirm = function (e) {\n      var _this$props = _this.props,\n          onClickConfirm = _this$props.onClickConfirm,\n          commentId = _this$props.commentId;\n\n      if (onClickConfirm) {\n        var args = {\n          reply: e.reply,\n          commentId: commentId\n        };\n        onClickConfirm(args);\n      }\n    };\n\n    _this.replyView = function () {\n      var _this$props2 = _this.props,\n          showReply = _this$props2.showReply,\n          commentId = _this$props2.commentId;\n\n      if (!showReply) {\n        return React.createElement(\"button\", {\n          className: \"reply-button\",\n          onClick: _this.onClickReply,\n          type: \"button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, \"\\u56DE\\u590D\");\n      }\n\n      return React.createElement(Reply, {\n        clickConfirm: _this.onClickConfirm,\n        commentId: commentId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      });\n    };\n\n    _this.generateSub = function () {\n      var subcomponent = _this.props.subcomponent;\n\n      if (subcomponent.length <= 0) {\n        return null;\n      }\n\n      var list = [];\n\n      for (var i = 0; i < subcomponent.length; i += 1) {\n        var node = subcomponent[i];\n\n        var comment = _this.generateCommentComponent(node);\n\n        list.push(comment);\n      }\n\n      return React.createElement(\"div\", {\n        className: \"comment-children\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, list);\n    };\n\n    _this.generateCommentComponent = function (node) {\n      var _this$props3 = _this.props,\n          clickReply = _this$props3.clickReply,\n          onClickConfirm = _this$props3.onClickConfirm;\n      var content = node.content,\n          name = node.name,\n          blog = node.blog;\n      var iconUrl = node.icon_url;\n      var createDate = node.create_date;\n      var commentID = node.comment_id;\n      var currentCommentID = getStore().getState().reply.commentID;\n      var marginLeft = _this.state.marginLeft;\n      var component = React.createElement(Comment, {\n        key: commentID,\n        commentId: commentID,\n        content: content,\n        name: name,\n        iconUrl: iconUrl,\n        showReply: commentID === currentCommentID,\n        blog: blog,\n        createDate: createDate,\n        clickReply: clickReply,\n        subcomponent: node.children,\n        marginLeft: marginLeft,\n        onClickConfirm: onClickConfirm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      });\n      return component;\n    };\n\n    _this.state = {\n      dispatch: getStore().dispatch,\n      marginLeft: isPC() ? '0px' : '0px'\n    };\n    return _this;\n  }\n\n  _createClass(Comment, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          iconUrl = _this$props4.iconUrl,\n          name = _this$props4.name,\n          createDate = _this$props4.createDate,\n          content = _this$props4.content,\n          marginLeft = _this$props4.marginLeft,\n          showReply = _this$props4.showReply;\n      var formatDate = getLocalTime(createDate, 'yyyy-MM-dd hh:mm:ss');\n      var icon = iconUrl.length ? \"\".concat(getbaseUrl(), \"avatar/\").concat(iconUrl) : defaultIcon;\n      return React.createElement(\"div\", {\n        className: \"comment-container \".concat(isPC() ? 'comment-container-pc' : 'comment-container-phone'),\n        style: {\n          marginLeft: marginLeft\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"comment-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"comment-icon\",\n        onClick: this.clickIconUrl,\n        role: \"presentation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"comment-img\",\n        src: icon,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"comment-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, name), React.createElement(\"div\", {\n        className: \"comment-date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, formatDate)), React.createElement(\"div\", {\n        className: \"comment-content\",\n        style: {\n          paddingBottom: showReply ? '10px' : '0px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, content), this.replyView(), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      })), this.generateSub());\n    }\n  }]);\n\n  return Comment;\n}(React.Component);\n\nComment.propTypes = {\n  iconUrl: PropTypes.string,\n  name: PropTypes.string,\n  blog: PropTypes.string,\n  content: PropTypes.string,\n  createDate: PropTypes.string,\n  clickReply: PropTypes.func,\n  showReply: PropTypes.bool,\n  commentId: PropTypes.number,\n  subcomponent: PropTypes.array,\n  // eslint-disable-line react/forbid-prop-types\n  marginLeft: PropTypes.string,\n  onClickConfirm: PropTypes.func\n};\nComment.defaultProps = {\n  iconUrl: 'default.png',\n  name: '',\n  blog: '',\n  content: '',\n  createDate: '',\n  clickReply: null,\n  showReply: false,\n  commentId: -1,\n  subcomponent: [],\n  marginLeft: '0px',\n  onClickConfirm: null\n};\n\nfunction mapStateToProps(state, ownProps) {\n  var getCommentID = function getCommentID() {\n    var commentID = state.reply.commentID;\n\n    if (!commentID) {\n      return ownProps.currentCommentID;\n    }\n\n    return commentID;\n  };\n\n  return {\n    currentCommentID: getCommentID()\n  };\n}\n\nexport default connect(mapStateToProps)(Comment);","map":{"version":3,"sources":["/home/max/blog_frontend/src/compontent/comment.js"],"names":["React","connect","PropTypes","getbaseUrl","Reply","getStore","replyComment","isPC","getLocalTime","defaultIcon","Comment","props","clickIconUrl","blog","length","des","startsWith","window","location","href","onClickReply","dispatch","state","commentId","onClickConfirm","e","args","reply","replyView","showReply","generateSub","subcomponent","list","i","node","comment","generateCommentComponent","push","clickReply","content","name","iconUrl","icon_url","createDate","create_date","commentID","comment_id","currentCommentID","getState","marginLeft","component","children","formatDate","icon","paddingBottom","Component","propTypes","string","func","bool","number","array","defaultProps","mapStateToProps","ownProps","getCommentID"],"mappings":"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","sourcesContent":["/**\n * Created by Max on 2019-03-25.\n */\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport './comment.css'\nimport PropTypes from 'prop-types'\nimport { getbaseUrl } from '../action/request'\nimport Reply from './reply'\nimport './reply.css'\nimport { getStore } from '../App'\nimport { replyComment } from '../action/reply'\nimport { isPC, getLocalTime } from '../utils/utils'\nimport defaultIcon from '../resource/png/default.png'\n\nclass Comment extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      dispatch: getStore().dispatch,\n      marginLeft: isPC() ? '0px' : '0px',\n    }\n  }\n\n  clickIconUrl = () => {\n    const { blog } = this.props\n    if (blog === null || blog.length === 0) {\n      return\n    }\n    let des = blog\n    if (!blog.startsWith('http')) {\n      des = `http://${des}`\n    }\n    window.location.href = des\n  };\n\n  onClickReply = () => {\n    const { dispatch } = this.state\n    const { commentId } = this.props\n    dispatch(replyComment(commentId))\n  };\n\n  onClickConfirm = (e) => {\n    const { onClickConfirm, commentId } = this.props\n    if (onClickConfirm) {\n      const args = {\n        reply: e.reply,\n        commentId,\n      }\n      onClickConfirm(args)\n    }\n  };\n\n  replyView = () => {\n    const { showReply, commentId } = this.props\n    if (!showReply) {\n      return (\n        <button\n          className=\"reply-button\"\n          onClick={this.onClickReply}\n          type=\"button\"\n        >\n          回复\n        </button>\n      )\n    }\n    return <Reply clickConfirm={this.onClickConfirm} commentId={commentId} />\n  };\n\n  generateSub = () => {\n    const { subcomponent } = this.props\n    if (subcomponent.length <= 0) {\n      return null\n    }\n    const list = []\n    for (let i = 0; i < subcomponent.length; i += 1) {\n      const node = subcomponent[i]\n      const comment = this.generateCommentComponent(node)\n      list.push(comment)\n    }\n    return <div className=\"comment-children\">{list}</div>\n  };\n\n  generateCommentComponent = (node) => {\n    const { clickReply, onClickConfirm } = this.props\n    const { content, name, blog } = node\n    const iconUrl = node.icon_url\n    const createDate = node.create_date\n    const commentID = node.comment_id\n    const currentCommentID = getStore().getState().reply.commentID\n    const { marginLeft } = this.state\n    const component = (\n      <Comment\n        key={commentID}\n        commentId={commentID}\n        content={content}\n        name={name}\n        iconUrl={iconUrl}\n        showReply={commentID === currentCommentID}\n        blog={blog}\n        createDate={createDate}\n        clickReply={clickReply}\n        subcomponent={node.children}\n        marginLeft={marginLeft}\n        onClickConfirm={onClickConfirm}\n      />\n    )\n    return component\n  };\n\n  render() {\n    const {\n      iconUrl,\n      name,\n      createDate,\n      content,\n      marginLeft,\n      showReply,\n    } = this.props\n    const formatDate = getLocalTime(createDate, 'yyyy-MM-dd hh:mm:ss')\n    const icon = iconUrl.length\n      ? `${getbaseUrl()}avatar/${iconUrl}`\n      : defaultIcon\n    return (\n      <div\n        className={`comment-container ${\n          isPC() ? 'comment-container-pc' : 'comment-container-phone'\n        }`}\n        style={{ marginLeft }}\n      >\n        <div>\n          <div className=\"comment-info\">\n            <div\n              className=\"comment-icon\"\n              onClick={this.clickIconUrl}\n              role=\"presentation\"\n            >\n              <img className=\"comment-img\" src={icon} alt=\"\" />\n            </div>\n            <div className=\"comment-name\">{name}</div>\n            <div className=\"comment-date\">{formatDate}</div>\n          </div>\n          <div\n            className=\"comment-content\"\n            style={{ paddingBottom: showReply ? '10px' : '0px' }}\n          >\n            {content}\n          </div>\n          {this.replyView()}\n          <div />\n        </div>\n        {this.generateSub()}\n      </div>\n    )\n  }\n}\n\nComment.propTypes = {\n  iconUrl: PropTypes.string,\n  name: PropTypes.string,\n  blog: PropTypes.string,\n  content: PropTypes.string,\n  createDate: PropTypes.string,\n  clickReply: PropTypes.func,\n  showReply: PropTypes.bool,\n  commentId: PropTypes.number,\n  subcomponent: PropTypes.array, // eslint-disable-line react/forbid-prop-types\n\n  marginLeft: PropTypes.string,\n  onClickConfirm: PropTypes.func,\n}\n\nComment.defaultProps = {\n  iconUrl: 'default.png',\n  name: '',\n  blog: '',\n  content: '',\n  createDate: '',\n  clickReply: null,\n  showReply: false,\n  commentId: -1,\n  subcomponent: [],\n  marginLeft: '0px',\n  onClickConfirm: null,\n}\n\nfunction mapStateToProps(state, ownProps) {\n  const getCommentID = () => {\n    const { commentID } = state.reply\n    if (!commentID) {\n      return ownProps.currentCommentID\n    }\n    return commentID\n  }\n  return {\n    currentCommentID: getCommentID(),\n  }\n}\n\nexport default connect(mapStateToProps)(Comment)\n"]},"metadata":{},"sourceType":"module"}